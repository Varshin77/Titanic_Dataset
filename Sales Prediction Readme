
## 📌 Overview  
This project focuses on **forecasting product sales** using historical data and **machine learning techniques**. The objective is to help businesses **optimize marketing strategies** by analyzing the impact of different factors on sales, such as **advertising spend, promotions, and customer segmentation**.  

---

## 📂 Dataset Overview  
The dataset contains historical sales data with multiple features affecting sales performance.  

### 🔹 Example Data Sample:  
| Date       | Store ID | Product ID | Sales | Price | Advertising | Promotions | Customer Segment | Holiday |  
|------------|---------|------------|-------|--------|------------|------------|------------------|--------|  
| 2024-01-01 | 1       | 1001       | 500   | 10.5   | 2000       | Yes        | High-Income      | No     |  
| 2024-01-02 | 2       | 1002       | 300   | 15.0   | 1000       | No         | Budget-Conscious | Yes    |  

### 🔹 Features Explained:  
- **Date** → Time-based feature (day, week, month, year)  
- **Store ID** → Identifies different stores  
- **Product ID** → Unique identifier for products  
- **Sales** → Number of units sold (**target variable**)  
- **Price** → Product price  
- **Advertising** → Budget spent on marketing  
- **Promotions** → Whether a promotion was active (Yes/No)  
- **Customer Segment** → Type of customer targeted (e.g., High-Income, Budget-Conscious)  
- **Holiday** → Whether the day was a public holiday (Yes/No)  

---

## 🎯 Objectives  
✅ **Forecast product sales** using machine learning models.  
✅ **Analyze the impact of advertising spend, promotions, and customer segmentation** on sales.  
✅ **Handle missing values, detect outliers, and apply feature scaling** for better model accuracy.  
✅ **Evaluate models** using performance metrics like RMSE, MAE, and R².  
✅ **Provide actionable insights** to optimize business strategies.  

---

## 📌 Data Preprocessing  
To improve model accuracy, the following data preprocessing steps are performed:  
✅ **Handling Missing Values:** Fill or remove missing data.  
✅ **Outlier Detection:** Use IQR and Z-score methods.  
✅ **Feature Scaling:** Normalize numerical features for better model performance.  
✅ **Feature Engineering:** Extract useful features like day of the week, seasonality, and trends.  

---

## 🛠️ Machine Learning Models Used  
Different machine learning models are tested to find the best fit:  
✅ **Linear Regression** → Baseline model for trend analysis.  
✅ **Random Forest Regressor** → Captures non-linear relationships.  
✅ **XGBoost Regressor** → Handles complex interactions efficiently.  
✅ **LSTM (Neural Network)** → Used for time-series forecasting.  

---

## 📊 Model Evaluation  
The models are evaluated using:  
- **Mean Absolute Error (MAE)**  
- **Root Mean Squared Error (RMSE)**  
- **R² Score**  

---

## 📥 How to Run the Project  

### 1️⃣ Clone the Repository  
```bash
git clone https://github.com/your-username/sales-prediction.git
cd sales-prediction
```

### 2️⃣ Install Dependencies  
```bash
pip install -r requirements.txt
```

### 3️⃣ Run the Data Preprocessing Script  
```bash
python preprocess.py
```

### 4️⃣ Train the Model  
```bash
python train.py
```

### 5️⃣ Evaluate and Predict  
```bash
python predict.py
```

---

## 📌 Expected Outcome  
- A **well-trained machine learning model** that accurately forecasts sales.  
- Insights into **how advertising, promotions, and customer segments affect sales**.  
- A tool that helps businesses **optimize marketing strategies** for sales growth.  

